
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JOptionPane;

/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

/**
 *
 * @author beamj
 */
public class Clock extends javax.swing.JPanel {
    
    public boolean timeEnd = false;
    private Timer timer;
    private Declaration dec;
    private boolean stopped = false;
    
    public static boolean isAlive = false;
    
    /**
     * Creates new form Clock
     * @param d
     */
    public Clock(Declaration d) {
        dec = d;
        initComponents();
        go();
    }
    
    public Clock(){
        timer = new Timer();
        initComponents();
        setDead();
    }
    
    public void setDec(Declaration d){
        setDead();
        dec = d;
        go();
    }
    
    public void setDead(){
        isAlive = false;
        System.out.println("SET DEAD");
        cleanTimer();
        timerField.setText("00:00:00");
        timerField.setEnabled(false);
        pauseTimerButton.setEnabled(false);
        editTimerButton.setEnabled(false);
        cancelDecButton.setEnabled(false);
        pauseTimerButton.setText("Pause Timer");
        stopped = false;
    }
    
    public boolean timeEnd(){
        return timeEnd;
    }
    
    public void go(){
        isAlive = true;
        System.out.println("GOO");
        timerField.setEnabled(true);
        pauseTimerButton.setEnabled(true);
        editTimerButton.setEnabled(false);
        cancelDecButton.setEnabled(true);
        timeEnd = false;
        timerField.setText(dec.time().toString());
        timer = new Timer();
        final Time subTime = new Time(0, 0, 1);
        timer.schedule(new TimerTask(){
            @Override
            public void run() {
                if(!stopped){
                    Time displayedTime = Time.convert(timerField.getText());
                    Time newTime = displayedTime.sub(subTime);
                    if(newTime.compareTo(displayedTime) != -1){
                        cleanTimer();
                        timeEnd = true;
                        dec.timeDone(true);
                    } else {
                        timerField.setText(newTime.toString());
                    }
                }
            }
        }, CalendarHelper.timeToNextSec(), 1000);
    }
    
    public void cleanTimer(){
        timer.cancel();
        timer.purge();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        timerPanel = new javax.swing.JPanel();
        timerField = new javax.swing.JTextField();
        pauseTimerButton = new javax.swing.JButton();
        editTimerButton = new javax.swing.JButton();
        cancelDecButton = new javax.swing.JButton();

        setLayout(new java.awt.GridLayout(1, 0));

        mainPanel.setLayout(new java.awt.GridLayout(4, 1));

        timerPanel.setBackground(mainPanel.getBackground());
        timerPanel.setLayout(new java.awt.GridLayout(1, 1));

        timerField.setEditable(false);
        timerField.setBackground(mainPanel.getBackground());
        timerField.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        timerField.setForeground(java.awt.Color.darkGray);
        timerField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        timerField.setText("00:00:00");
        timerField.setBorder(null);
        timerPanel.add(timerField);

        mainPanel.add(timerPanel);

        pauseTimerButton.setBackground(mainPanel.getBackground());
        pauseTimerButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pauseTimerButton.setText("Pause Timer");
        pauseTimerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pauseTimerButtonMouseClicked(evt);
            }
        });
        mainPanel.add(pauseTimerButton);

        editTimerButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        editTimerButton.setText("Edit Timer");
        editTimerButton.setEnabled(false);
        editTimerButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                editTimerButtonMouseClicked(evt);
            }
        });
        mainPanel.add(editTimerButton);

        cancelDecButton.setBackground(mainPanel.getBackground());
        cancelDecButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cancelDecButton.setText("Cancel Declaration");
        cancelDecButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cancelDecButtonMouseClicked(evt);
            }
        });
        mainPanel.add(cancelDecButton);

        add(mainPanel);
    }// </editor-fold>//GEN-END:initComponents
    
    private void cancelDecButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cancelDecButtonMouseClicked
        if(!cancelDecButton.isEnabled()){
            return;
        }
        cleanTimer();
        dec.timeDone(false);
        Main.main.setTabbedPaneToBegin();
    }//GEN-LAST:event_cancelDecButtonMouseClicked
    
    private void pauseTimerButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseTimerButtonMouseClicked
        if(!pauseTimerButton.isEnabled()){
            return;
        }
        stopped = !stopped;
        if(stopped){
            editTimerButton.setEnabled(true);
            pauseTimerButton.setText("Start Timer");
        } else {
            editTimerButton.setEnabled(false);
            pauseTimerButton.setText("Pause Timer");
        }
    }//GEN-LAST:event_pauseTimerButtonMouseClicked

    private void editTimerButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editTimerButtonMouseClicked
        if(!editTimerButton.isEnabled()){
            return;
        }
        EditTimer et = new EditTimer(dec.time());
        JOptionPane.showMessageDialog(this, et, "Edit Timer", JOptionPane.PLAIN_MESSAGE);
        Time t = et.getTime();
        if(t.equals(dec.time())){
            return;
        }
        if(t.getMili() == 0){
            JOptionPane.showMessageDialog(this, "Can't set timer to 0 hours, 0 minutes, and 0 seconds!", "Error!", JOptionPane.PLAIN_MESSAGE);
        } else {
            dec.setTime(t);
            timerField.setText(t.toString());   
        }
    }//GEN-LAST:event_editTimerButtonMouseClicked
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelDecButton;
    private javax.swing.JButton editTimerButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton pauseTimerButton;
    private javax.swing.JTextField timerField;
    private javax.swing.JPanel timerPanel;
    // End of variables declaration//GEN-END:variables
}
