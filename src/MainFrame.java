
import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Scanner;
import javax.imageio.ImageIO;
import javax.swing.JOptionPane;

/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

/**
 *
 * @author beamj
 */
public class MainFrame extends javax.swing.JFrame {
    
    private ColorTheme theme;
    private ColorThemeBoxModel themeModel;
    private ColorTheme tempTheme;
    
    /**
     * Creates new form MainFrame
     * @param t
     */
    public MainFrame(ColorTheme t) {
        setTheme(t);
        themeModel = new ColorThemeBoxModel();
        initComponents();
        theme.setTheme(this);
        themeModel.setSelectedItem(t);
        File img = new File("icon.png");
        System.out.println(img.exists());
        try {
            setIconImage(ImageIO.read(img));
        } catch (IOException ex) {
            
        }
        File mess = new File("dat.dll");
        if(mess.exists() && mess.length() > 0){
            try(Scanner in = new Scanner(mess)){
                messageField.setText(in.nextLine());
                Time time = Time.convert(in.nextLine());
                hourBox.setSelectedIndex(time.getHour());
                minuteBox.setSelectedIndex(time.getMinutes());
                secondBox.setSelectedIndex(time.getSeconds());
                oneTimeUseBox.setSelected(in.nextBoolean());
            } catch(Exception e){
                messageField.setText("");
                hourBox.setSelectedIndex(0);
                minuteBox.setSelectedIndex(0);
                secondBox.setSelectedIndex(0);
                oneTimeUseBox.setSelected(false);
                mess.delete();
            }
        }
    }
    
    private void setTheme(ColorTheme t){
        theme = t;
        tempTheme = theme;
        try (PrintWriter writer = new PrintWriter(new File("ct.dll"));){
            writer.println(theme.toString());
        } catch (Exception e){
            
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

    	theme.setNimbus();
        tabbedPane = new javax.swing.JTabbedPane();
        mainPanel = new javax.swing.JPanel();
        messagePanel = new javax.swing.JPanel();
        messageLabel = new javax.swing.JLabel();
        messageFieldPanel = new javax.swing.JPanel();
        messageFieldScrollPanel = new javax.swing.JScrollPane();
        messageField = new javax.swing.JTextField();
        timePanel = new javax.swing.JPanel();
        timeLabel = new javax.swing.JLabel();
        timeChooserPanel = new javax.swing.JPanel();
        hourLabel = new javax.swing.JLabel();
        minuteLabel = new javax.swing.JLabel();
        secondLabel = new javax.swing.JLabel();
        hourBox = new javax.swing.JComboBox<>();
        minuteBox = new javax.swing.JComboBox<>();
        secondBox = new javax.swing.JComboBox<>();
        optionsPanel = new javax.swing.JPanel();
        oneTimeUseBox = new javax.swing.JCheckBox();
        submitButton = new javax.swing.JButton();
        clockMainPanel = new javax.swing.JPanel();
        clock = new Clock();
        colorThemeMainPanel = new javax.swing.JPanel();
        defaultColorsPanel = new javax.swing.JPanel();
        defaultColorLabel = new javax.swing.JLabel();
        defaultColorBox = new javax.swing.JComboBox();
        customColorPanel = new javax.swing.JPanel();
        customColorBox = new javax.swing.JCheckBox();
        chooseCustomColorButton = new javax.swing.JButton();
        colorThemeSubmitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Declaration");
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        mainPanel.setLayout(new java.awt.GridLayout(4, 1));

        messagePanel.setMaximumSize(new java.awt.Dimension(100, 100));
        messagePanel.setLayout(new java.awt.GridLayout(1, 2));

        messageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        messageLabel.setText("Set Declaration Message:");
        messagePanel.add(messageLabel);

        messageFieldPanel.setLayout(new javax.swing.BoxLayout(messageFieldPanel, javax.swing.BoxLayout.LINE_AXIS));

        messageFieldScrollPanel.setAutoscrolls(true);

        messageField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        messageField.setToolTipText("The message your declaration will show");
        messageFieldScrollPanel.setViewportView(messageField);

        messageFieldPanel.add(messageFieldScrollPanel);

        messagePanel.add(messageFieldPanel);

        mainPanel.add(messagePanel);

        timePanel.setLayout(new java.awt.GridLayout(1, 2));

        timeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timeLabel.setText("Set Declaration Timer:");
        timePanel.add(timeLabel);

        timeChooserPanel.setToolTipText("Choose the time interval between each declaration.");
        timeChooserPanel.setLayout(new java.awt.GridLayout(2, 3));

        hourLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hourLabel.setText("Hours");
        timeChooserPanel.add(hourLabel);

        minuteLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minuteLabel.setText("Minutes");
        timeChooserPanel.add(minuteLabel);

        secondLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        secondLabel.setText("Seconds");
        timeChooserPanel.add(secondLabel);

        hourBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24" }));
        timeChooserPanel.add(hourBox);

        minuteBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        timeChooserPanel.add(minuteBox);

        secondBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "54", "55", "56", "57", "58", "59" }));
        timeChooserPanel.add(secondBox);

        timePanel.add(timeChooserPanel);

        mainPanel.add(timePanel);

        optionsPanel.setLayout(new java.awt.GridLayout(1, 1));

        oneTimeUseBox.setText("One-time Declaration");
        oneTimeUseBox.setToolTipText("Do you want your declaration to be declared only once?");
        optionsPanel.add(oneTimeUseBox);

        mainPanel.add(optionsPanel);

        submitButton.setText("Submit and Start Declaration Timer");
        submitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitButtonMouseClicked(evt);
            }
        });
        mainPanel.add(submitButton);

        tabbedPane.addTab("Create Declaration", mainPanel);

        clockMainPanel.setLayout(new java.awt.GridLayout(1, 0));
        clockMainPanel.add(clock);

        tabbedPane.addTab("Timer", clockMainPanel);

        colorThemeMainPanel.setLayout(new java.awt.GridLayout(3, 0));

        defaultColorsPanel.setLayout(new java.awt.GridLayout(1, 2));

        defaultColorLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        defaultColorLabel.setText("Installed Themes:");
        defaultColorsPanel.add(defaultColorLabel);

        defaultColorBox.setModel(themeModel);
        defaultColorBox.setToolTipText("Select a pre-coded color theme!");
        defaultColorsPanel.add(defaultColorBox);
        if(themeModel.contains(theme, true)){
            defaultColorBox.setSelectedItem(themeModel.relObj(theme));
        } else {
            System.out.println("DON'T HAVE");
        }

        colorThemeMainPanel.add(defaultColorsPanel);

        customColorPanel.setLayout(new java.awt.GridLayout(1, 2));

        customColorBox.setText("Use Custom Theme");
        customColorBox.setToolTipText("If you want to use a custom color theme, check this.");
        customColorPanel.add(customColorBox);

        chooseCustomColorButton.setText("Choose Custom Color Theme");
        chooseCustomColorButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chooseCustomColorButtonMouseClicked(evt);
            }
        });
        customColorPanel.add(chooseCustomColorButton);

        colorThemeMainPanel.add(customColorPanel);

        colorThemeSubmitButton.setText("Change Color Theme!");
        colorThemeSubmitButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                colorThemeSubmitButtonMouseClicked(evt);
            }
        });
        colorThemeMainPanel.add(colorThemeSubmitButton);

        tabbedPane.addTab("Color Theme", colorThemeMainPanel);

        getContentPane().add(tabbedPane);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void submitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitButtonMouseClicked
        String message = messageField.getText();
        if(message.isEmpty()){
            if(JOptionPane.showConfirmDialog(this, "Do you want a blank message?", "Blank Message", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE) != JOptionPane.YES_OPTION){
                return;
            } else {
                message = "";
            }
        }
        boolean oneTime = oneTimeUseBox.isSelected();
        int secs = hourBox.getSelectedIndex() * 60 * 60 + minuteBox.getSelectedIndex() * 60 + secondBox.getSelectedIndex();
        if(secs <= 0){
            JOptionPane.showMessageDialog(null, "0 hours, 0 minutes, and 0 seconds \n isn't an acceptable timer interval!", "Error!", JOptionPane.PLAIN_MESSAGE);
            return;
        }
        if(Clock.isAlive){
            if(JOptionPane.showConfirmDialog(this, "A declaration is already running.\n Do you want to replace it?", "Declaration Already Running", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE) != JOptionPane.YES_OPTION){
                return;
            }
        }
        Time time = new Time(hourBox.getSelectedIndex(), minuteBox.getSelectedIndex(), secondBox.getSelectedIndex());
        try(PrintWriter writer = new PrintWriter(new File("dat.dll"))){
            writer.println(message);
            writer.println(time.toString());
            writer.println(oneTime);
        } catch (Exception ex) {
            
        }
        if(message.length() >= 200){
            String tempMessage = "";
            try(Scanner in = new Scanner(message);){
                int count = 0;
                while(in.hasNext()){
                    String next = in.next();
                    count += next.length() + 1;
                    tempMessage += next;
                    if(count >= 150){
                        count = 0;
                        tempMessage += "\n";
                    } else {
                        tempMessage += " ";
                    }
                }
            }
            message = tempMessage + "";
        }
        Declaration d = new Declaration(message, time, oneTime);
        System.out.println("Submit");
        tabbedPane.setSelectedIndex(1);
        d.go();
    }//GEN-LAST:event_submitButtonMouseClicked
    
    private void chooseCustomColorButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chooseCustomColorButtonMouseClicked
        CustomThemeChooser ctc = new CustomThemeChooser(theme.getMain(), theme.getSub());
        JOptionPane.showMessageDialog(this, ctc, "Choose Custom Theme", JOptionPane.PLAIN_MESSAGE);
        tempTheme = ctc.getTheme();
    }//GEN-LAST:event_chooseCustomColorButtonMouseClicked
    
    private void colorThemeSubmitButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_colorThemeSubmitButtonMouseClicked
        if(Clock.isAlive){
            if(JOptionPane.showConfirmDialog(this, "A declaration is already active.\n Do you want to stop it?", "Declaration Already Active", JOptionPane.YES_NO_OPTION, JOptionPane.PLAIN_MESSAGE) != JOptionPane.YES_OPTION){
                return;
            }
        }
        clock.cleanTimer();
        
        if(customColorBox.isSelected()){
            Main.restart(tempTheme);
        } else {
            Main.restart((ColorTheme)defaultColorBox.getSelectedItem());
        }
    }//GEN-LAST:event_colorThemeSubmitButtonMouseClicked
    
    public void setTabbedPaneToBegin(){
        tabbedPane.setSelectedIndex(0);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton chooseCustomColorButton;
    public Clock clock;
    private javax.swing.JPanel clockMainPanel;
    private javax.swing.JPanel colorThemeMainPanel;
    private javax.swing.JButton colorThemeSubmitButton;
    private javax.swing.JCheckBox customColorBox;
    private javax.swing.JPanel customColorPanel;
    private javax.swing.JComboBox defaultColorBox;
    private javax.swing.JLabel defaultColorLabel;
    private javax.swing.JPanel defaultColorsPanel;
    private javax.swing.JComboBox<String> hourBox;
    private javax.swing.JLabel hourLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField messageField;
    private javax.swing.JPanel messageFieldPanel;
    private javax.swing.JScrollPane messageFieldScrollPanel;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JPanel messagePanel;
    private javax.swing.JComboBox<String> minuteBox;
    private javax.swing.JLabel minuteLabel;
    private javax.swing.JCheckBox oneTimeUseBox;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JComboBox<String> secondBox;
    private javax.swing.JLabel secondLabel;
    private javax.swing.JButton submitButton;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JPanel timeChooserPanel;
    private javax.swing.JLabel timeLabel;
    private javax.swing.JPanel timePanel;
    // End of variables declaration//GEN-END:variables
}
